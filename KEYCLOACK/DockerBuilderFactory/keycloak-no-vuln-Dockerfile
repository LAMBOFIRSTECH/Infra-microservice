# Étape 1 : build de gosu statique sans vulnérabilités
FROM golang:alpine3.21 AS builder
LABEL stage="builder"
ENV CGO_ENABLED=0

RUN apk add --no-cache git
RUN git clone https://github.com/tianon/gosu.git /src/gosu

WORKDIR /src/gosu
# Compiler gosu avec CGO désactivé pour un binaire statique
RUN CGO_ENABLED=0 go build -ldflags="-s -w" -o /usr/local/bin/gosu

# Étape 2 : image finale Keycloak sans vulnérabilités
FROM alpine@sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474
RUN apk update && apk upgrade && \
    apk add --no-cache curl openjdk17-jre bash && \
    adduser -D keycloak
COPY --from=builder /usr/local/bin/gosu /usr/local/bin/gosu
RUN chmod +x /usr/local/bin/gosu
RUN mkdir -p /opt/keycloak && \
    mkdir -p /opt/keycloak/certs && \
    chown -R keycloak:keycloak /opt/keycloak
WORKDIR /opt
RUN curl -L https://github.com/keycloak/keycloak/releases/download/26.2.0/keycloak-26.2.0.tar.gz -o keycloak.tar.gz && \
    tar -xzf keycloak.tar.gz -C /opt/keycloak --strip-components=1 && \
    rm keycloak.tar.gz
RUN chown -R keycloak:keycloak /opt/keycloak && \
    chown -R keycloak:keycloak /opt/keycloak/certs 
COPY keycloak_start.sh /keycloak_start.sh 
RUN chmod +x /keycloak_start.sh
USER keycloak

WORKDIR /opt/keycloak
LABEL maintainer="lamboartur94@gmail.com" \
      org.opencontainers.image.source="https://github.com/LAMBOFIRSTECH/Infra-microservice/tree/main/KEYCLOACK/DockerBuilderFactory" \
      org.opencontainers.image.os="linux" \
      org.opencontainers.image.architecture="amd64" \
      org.opencontainers.image.version="v2" \
      org.opencontainers.image.created="2025-04-13" \
      org.opencontainers.image.description="Keycloak 26.2.1 with static gosu and no vulnerabilities" \
      org.opencontainers.image.vendor="LAMBOFIRSTECH"

CMD ["/keycloak.sh"]